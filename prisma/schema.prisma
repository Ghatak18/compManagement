generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String     @id @default(uuid())
  authServiceId   String     @unique
  name            String
  email           String     @unique
  role            Role       @default(DEV)
  manager         User?      @relation("TeamMembers", fields: [managerId], references: [id])
  managerId       String?
  capacity        Int        @default(10)
  currentTasks    Int        @default(0)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  teamMembers     User[]     @relation("TeamMembers")
  createdTasks    Task[]     @relation("CreatedTasks")
  assignedTasks   Task[]     @relation("AssignedTasks")
  notifications   Notification[]

  @@index([role])
  @@index([managerId])
}

model Task {
  id              String     @id @default(uuid())
  title           String
  description     String?
  status          TaskStatus @default(REQUESTED)
  priority        Priority   @default(MEDIUM)
  estimatedHours  Float?
  assignedTo      User?      @relation("AssignedTasks", fields: [assignedToId], references: [id])
  assignedToId    String?
  createdBy       User       @relation("CreatedTasks", fields: [createdById], references: [id])
  createdById     String
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  customerJobId   String?

  @@index([status])
  @@index([assignedToId])
}

model Notification {
  id              String     @id @default(uuid())
  message         String
  type           String
  isRead         Boolean    @default(false)
  user           User       @relation(fields: [userId], references: [id])
  userId         String
  createdAt      DateTime   @default(now())
}

enum Role {
  CHIEF
  MANAGER
  DEV
}

enum TaskStatus {
  REQUESTED
  PENDING
  IN_PROGRESS
  COMPLETED
  BLOCKED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}